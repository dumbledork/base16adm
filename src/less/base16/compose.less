
// Compose
.compose {
  .clearfix();
  margin-top: @grid-gutter-width;
  margin-bottom: @grid-gutter-width;
  border: 1px solid darken(@content-basecolor, 3%);
  border-radius: @border-radius-base;
  box-shadow: 0 1px 0 lighten(@content-basecolor, 2%),
              1px 1px 0 lighten(@content-basecolor, 2%),
              -1px -1px 0 lighten(@content-basecolor, 2%);
  background-color: darken(@content-basecolor, 2%);
}

.compose-inner {
  margin-left: @grid-gutter-width / -2;
  margin-right: @grid-gutter-width / -2;
}

// Form Structure

.form-email {
  // min-height: 60%;
  padding: (@grid-gutter-width / 2);
  border-radius: 4px;

  // Override BS .nav-tabs default
  .nav-tabs {
    margin-left: (@grid-gutter-width / -2);
    margin-right: (@grid-gutter-width / -2);
    padding-left: (@grid-gutter-width / 2);
    padding-right: (@grid-gutter-width / 2);
    box-shadow: 0 -1px 0 lighten(@content-basecolor, 1.5%) inset;
    border-bottom-color: darken(@content-basecolor, 3.5%);
  }

  .nav-tabs > li.active > a,
  .nav-tabs > li.active > a:hover,
  .nav-tabs > li.active > a:focus {
    border-top-color: darken(@content-basecolor, 3.5%);
    border-left-color: darken(@content-basecolor, 3.5%);
    border-right-color: darken(@content-basecolor, 3.5%);
    box-shadow: 0 -1px 0 lighten(@content-basecolor, 1.5%),
                1px -1px 0 lighten(@content-basecolor, 2%),
                -1px -1px 0 lighten(@content-basecolor, 1.5%);
  }

  .nav-tabs > li > a:hover {
    background-color: darken(@content-basecolor, 3.5%);
    border-color: transparent;
    box-shadow: none;
  }

  .nav-tabs > .pull-right {
    margin-right: ((@grid-gutter-width / 2) - @grid-gutter-width);

    > a {
      color: @gray;
      font-weight: bold;
    }

    > a:hover {
      color: @brand-primary;
      border-color: transparent;
      background-color: transparent;
    }
  }

  // Override BS .tab-content
  .tab-content {
    padding-top: (@grid-gutter-width - 10);
    padding-bottom: (@grid-gutter-width / 2);
  }

  // Set BS .form-group to relative so
  // we can `position: absolute` remove buttons
  .form-group { position: relative; }

  // .remove btn is based on BS .btn class
  // with some additions.
  .form-group > .remove {
    .transition(opacity .2 ease);
    position: absolute;
    top: 1px;
    right: 1px;
    display: inline-block;
    height: (@input-height-base - 2);
    margin-bottom: 0;
    padding-left: px;
    padding-right: 10px;
    font-weight: bold;
    font-size: 18px;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    border: 0 none;
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    background-color: fade(#fff, 95%);
    opacity: 0.5;

    &:hover {
      opacity: 1;
    }
  }

  textarea.form-control {
    resize: vertical;
    border-bottom-color: transparent;
    background-color: darken(@content-basecolor, 1%);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;

    &:focus {
      background-color: darken(@content-basecolor, 2%);
    }
  }

  .attachment {
    padding: 5px;
    border: 1px solid darken(@content-basecolor, 3%);
    border-top-style: dashed;
    background-color: darken(@content-basecolor, 2.5%);
    border-bottom-left-radius: @border-radius-base;
    border-bottom-right-radius: @border-radius-base;
  }
}


#bcc, #cc {
  .transition(all .3s ease .5s);
  display: none;
  opacity: 0;

  &.active {
    .transition(all .2s ease 0s);
    display: block;
    opacity: 1;
  }
}